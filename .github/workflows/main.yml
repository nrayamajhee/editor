name: Main CI

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'api/**'
            frontend:
              - 'web-next/**'
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web-next
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: |
          cp -r ../api/bindings ./bindings
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "web-next/package-lock.json"
      - name: Install dependencies
        run: |
          npm install schema
          npm ci
      - name: Build
        run: |
          npm run check &&
          npm run build
  backend:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch' }}
    defaults:
      run:
        working-directory: api
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup rust
        run: rustup update stable && rustup default stable
      - name: Build
        run: RUSTFLAGS="-D warnings" cargo check --verbose
  deploy-frontend:
    needs: frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web-next
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_FRONTEND }}
  deploy-backend:
    needs: backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
